#!/usr/bin/python2.7

#############################################################################################
#Change the filtered maf file generated by R and output as a snp cll type file
#############################################################################################

import sys
import os
import csv

#set up script
os.chdir('/Users/d.brown6/Documents/eQTL/Matrix_eQTL_R/')
inFile = sys.argv[1]
outFile = sys.argv[2]
data = []

#read in the files
f = open(inFile, 'U')
files = csv.reader(f, delimiter='\t')
for row in files:
    data.append(row)
    
#get the header row then remove it from data
dataHeader = data[0][:]
data = data[1:]

#create a list of patient IDs
def makeListFromColumn(table, columnNumber):
    'Do a function thing'    
    extractedList = []
    for row in table:
        extractedList.append(row[columnNumber])
    extractedListDedup = sorted(set(extractedList))
    return extractedListDedup

tumourSampleBarcode = makeListFromColumn(data, 2)
geneExtractedList = makeListFromColumn(data, 0)
zeros = len(tumourSampleBarcode)

#================================Trying the list way============================
# matrix = []
# x = 0
# for gene in geneExtractedList:
#    matrix.append(gene)
#    while x <= zeros:  
#        matrix.append('0')
#        x += 1
#===============================================================================

#-------------------------------Trying the dictionary way--------------------------------- 
matrix = dict.fromkeys(geneExtractedList)
for gene in matrix: #for each key in the matrix
    for row in data: #for each entry in the maf file
        if gene == row[0]: #if the key is the first entry of the maf file
            print row[2]
            matrix[gene[0]].update(row[2]) #add the patient ID as the value for the key

#should be 3 values for TP53 if this works
print matrix
    